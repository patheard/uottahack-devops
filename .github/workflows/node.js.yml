# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  HEROKU_APP_NAME: uottahack-devops
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  DOCKER_REGISTRY: registry.heroku.com

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm test

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: echo ${{ env.HEROKU_API_KEY }} | docker login --username=_ --password-stdin ${{ env.DOCKER_REGISTRY }}

      - name: Docker build
        run: docker build -t ${{ env.DOCKER_REGISTRY }}/${{ env.HEROKU_APP_NAME }}/web:latest .

      - name: Docker push
        run: docker push ${{ env.DOCKER_REGISTRY }}/${{ env.HEROKU_APP_NAME }}/web:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      # Expects a HEROKU_API_KEY env variable
      # Generate with `heroku login` and then `heroku authorizations:create` (prod) or `heroku auth:token` (dev)
      - name: Deploy the app to Heroku
        run: heroku container:release web --app ${{ env.HEROKU_APP_NAME }}